%{
	open Backend
%}
/*CHANGE : open Backend added for the parser to be able to call the backend functions*/
%token <float> NUM
%token <int> INDEX
%token OPENB CLOSEB OPENP CLOSEP 
%token COMMA COLON ASSIGN TERMIN
%token COUNT ROWCOUNT COLCOUNT SUM ROWSUM COLSUM AVG ROWAVG COLAVG MIN ROWMIN COLMIN MAX ROWMAX COLMAX
%token ADD SUBT MULT DIV
/*Defining Precedence from lowest to highest ':=' and ';' have the lowest precedence and integers and floats have the highest precedence*/
%left ASSIGN TERMIN
%left COUNT ROWCOUNT COLCOUNT SUM ROWSUM COLSUM AVG ROWAVG COLAVG MIN ROWMIN COLMIN MAX ROWMAX COLMAX ADD SUBT MULT DIV
%left OPENP CLOSEP
%left COLON
%left OPENB CLOSEB
%left COMMA
%nonassoc INDEX NUM
%start main		/*Entry Point is defined using %start*/
%type <unit> main				/*CHANGE : type of main changed to unit*/
%%
/*Defining the Context free Grammer for the Parser*/  			/*CHANGE : head removed because the output index wasn't available for the backend function in the previous implementation and the return values in the {} have been set to blank instead of $1 earlier because of type chane of main*/
main: 
	expr TERMIN			{} /*Parsing the whole expression and ';' which shows the termination of a formula*/
;
expr:								/*there are basically five kinds of operations that need to be parsed*/
	unary					{}
	| binaryone				{}
	| binarytwo				{}
	| binarythree			{}
	| binaryfour			{}
	| binaryfive			{}
;
unary: /*Parsing all the unary operation and calling the OCaml function corresponding to each operation and also providing the argument for the functions from the parsed input*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN COUNT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP 						{ full_count sheet $10 $12 $16 $18 $2 $4 }				/*CHANGE : Input arguements of all the functions changed for compatibility with Backend*/
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN ROWCOUNT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP					{ row_count sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN COLCOUNT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP					{ col_count sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ full_sum sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN ROWSUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ row_sum sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN COLSUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ col_sum sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN AVG OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ full_avg sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN ROWAVG OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ row_avg sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN COLAVG OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ col_avg sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MIN OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ full_min sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN ROWMIN OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ row_min sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN COLMIN OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ col_min sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MAX OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ full_max sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN ROWMAX OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ row_max sheet $10 $12 $16 $18 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN COLMAX OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP						{ col_max sheet $10 $12 $16 $18 $2 $4 }
;
binaryone: /*Parsing the functions ( I := FUNC R R ) and calling their corresponding OCaml functions*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN ADD OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP																		{ add_range sheet $10 $12 $16 $18 $23 $25 $29 $31 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUBT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP																{ subt_range sheet $10 $12 $16 $18 $23 $25 $29 $31 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MULT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP																{ mult_range sheet $10 $12 $16 $18 $23 $25 $29 $31 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN DIV OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP																		{ div_range sheet $10 $12 $16 $18 $23 $25 $29 $31 $2 $4 }
;
binarytwo: /*Parsing the functions ( I := FUNC R C ) and calling their corresponding OCaml functions*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN ADD OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP NUM				{ add_const sheet $10 $12 $16 $18 $21 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUBT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP NUM				{ subt_const sheet $10 $12 $16 $18 $21 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MULT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP NUM				{ mult_const sheet $10 $12 $16 $18 $21 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN DIV OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP NUM				{ div_const sheet $10 $12 $16 $18 $21 $2 $4 }
;
binarythree: /*Parsing the functions ( I := FUNC C R ) and calling their corresponding OCaml functions*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN ADD NUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP				{ add_const sheet $11 $13 $17 $19 $8 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUBT NUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP				{ subt_const sheet $11 $13 $17 $19 $8 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MULT NUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP				{ mult_const sheet $11 $13 $17 $19 $8 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN DIV NUM OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP				{ div_const sheet $11 $13 $17 $19 $8 $2 $4 }
;
binaryfour: /*Parsing the functions ( I := FUNC R I ) and calling their corresponding OCaml functions*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN ADD OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENB INDEX COMMA INDEX CLOSEB		{ add_index sheet $10 $12 $16 $18 $22 $24 $2 $4 }			/*CHANGE : Four new function to account for the input being index of the sheet instead of a constant*/
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUBT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENB INDEX COMMA INDEX CLOSEB	{ subt_index sheet $10 $12 $16 $18 $22 $24 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MULT OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENB INDEX COMMA INDEX CLOSEB	{ mult_index sheet $10 $12 $16 $18 $22 $24 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN DIV OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP OPENB INDEX COMMA INDEX CLOSEB	{ div_index sheet $10 $12 $16 $18 $22 $24 $2 $4 }
;
binaryfive:  /*Parsing the functions ( I := FUNC R I ) and calling their corresponding OCaml functions*/
	OPENB INDEX COMMA INDEX CLOSEB ASSIGN ADD OPENB INDEX COMMA INDEX CLOSEB OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP 	{ add_index sheet $15 $17 $21 $23 $9 $11 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN SUBT OPENB INDEX COMMA INDEX CLOSEB OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP 	{ subt_index sheet $15 $17 $21 $23 $9 $11 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN MULT OPENB INDEX COMMA INDEX CLOSEB OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP 	{ mult_index sheet $15 $17 $21 $23 $9 $11 $2 $4 }
	| OPENB INDEX COMMA INDEX CLOSEB ASSIGN DIV OPENB INDEX COMMA INDEX CLOSEB OPENP OPENB INDEX COMMA INDEX CLOSEB COLON OPENB INDEX COMMA INDEX CLOSEB CLOSEP 	{ div_index sheet $15 $17 $21 $23 $9 $11 $2 $4 }
;
/*END OF PARSER*/
